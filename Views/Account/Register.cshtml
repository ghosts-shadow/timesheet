@model onlygodknows.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h2>@ViewBag.Title.</h2>
@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.ValidationSummary(false, string.Empty, new { @class = "text-danger" })
        @Html.AntiForgeryToken()
        <h4>Create a new account.</h4>
        <hr/>
        <div class="form-group">
            @Html.LabelFor(m => m.full_name, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.full_name, new { @class = "form-control" })
            </div>
        </div>
        @Html.ValidationSummary(string.Empty, new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            </div>
        </div>
        @Html.ValidationSummary(string.Empty, new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.username, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.username, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.UserRole, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                <p>
                    @if (User.Identity.IsAuthenticated)
                    {
                        if (User.IsInRole("Admin"))
                        {
                            @Html.RadioButtonFor(m => m.UserRole, "Admin", new { @class = "radio-inline" })
                            @Html.Label("Admin")<br/>
                            @Html.RadioButtonFor(m => m.UserRole, "Project_manager", new { @class = "radio-inline" })@Html.Label("Project manager")<br/>
                            @Html.RadioButtonFor(m => m.UserRole, "Head_of_projects", new { @class = "radio-inline" })@Html.Label("Head of projects")<br/>
                            @Html.RadioButtonFor(m => m.UserRole, "HR_manager", new { @class = "radio-inline" })@Html.Label("HR manager")<br/>
                        }
                    }
                    @Html.RadioButtonFor(m => m.UserRole, "Employee", new { @class = "radio-inline" })@Html.Label("time keeper")
                </p>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Register"/>
            </div>

        </div>
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}